#!/usr/bin/env python

from __future__ import print_function

__doc__ = """
syapsefdw-ddl -- generate CREATE FOREIGN TABLE DDL for Syapse Foreign Data Wrappers

See PostgreSQL's FDW documentation and syapse.com.

License: PostgreSQL (http://www.postgresql.org/about/licence/)

2013-05-24 Reece Hart <reecehart@gmail.com>
"""

import argparse
import ConfigParser
import logging
import os
import pprint
import sys

import IPython

root = os.path.dirname(os.path.dirname(__file__))
sys.path.insert(0, os.path.join(root,'python'))

from syapsefdw import SyapseFDWFactory


def parse_args(argv):
    ap = argparse.ArgumentParser(
        description = __doc__,
        formatter_class = argparse.ArgumentDefaultsHelpFormatter,
        )

    ap.add_argument('--conf-file', '-C',
                    metavar="FILE",
                    required = True,
                    help="config file")
    ap.add_argument('--source', '-s',
                    metavar = 'CLASS_OR_QUERY',
                    type = unicode,
                    required = True,
                    help = 'name of Syapse class or Saved Query')

    return ap.parse_args( argv )
    


if __name__ == '__main__':
    logging.basicConfig(level = logging.INFO)

    opts = parse_args(sys.argv[1:])

    cp = ConfigParser.SafeConfigParser()

    fdw = SyapseFDWFactory(
        options = {
            'conf_file' : opts.conf_file,
            'source'    : opts.source
            },
        columns = {}
        )
    for row in fdw.execute(None,None):
        pprint.pprint(row)
